diff -Nur plague-0.4.5.8-orig/builder/builder.py plague-0.4.5.8/builder/builder.py
--- plague-0.4.5.8-orig/builder/builder.py	2010-05-05 12:45:20.000000000 +0200
+++ plague-0.4.5.8/builder/builder.py	2015-03-02 01:46:22.511456796 +0100
@@ -253,15 +253,6 @@
         self._childpid = ExecUtils.exec_with_redirect(cmd, args, None, None, None)
         self._status = 'cleanup'
 
-    def _mock_is_prepping(self):
-        mock_status = self._get_mock_status()
-        if mock_status:
-            prepstates = ['enabl','creating cache','unpacking cache','setup']
-            for s in prepstates:
-                if mock_status.startswith(s):
-                    return True
-        return False
-
     def _get_mock_status(self):
         mockstatusfile = self._state_file
         if not os.path.exists(mockstatusfile):
@@ -285,15 +276,16 @@
                     continue
                 break
         f.close()
-        mockstat = None
-        lastline = lines[len(lines)-1].lower()
-        statedelim = "state changed:"
-        stateidx = lastline.rfind(statedelim)
-        if stateidx>0:
-            mockstat = lastline[stateidx+len(statedelim):].lstrip()
-            return mockstat
-        else:
-            return None
+        mockstat = 'prepping'
+        for li in range(len(lines)):
+            line = lines[li].lower()
+            statedelim = " start: "
+            stateidx = line.rfind(statedelim)
+            if stateidx>0:
+                s = line[stateidx+len(statedelim):].lstrip()
+                if s.startswith('rpmbuild'):
+                    return 'building'
+        return mockstat
 
     def _read_mock_config(self):
         mockconfigfile = os.path.join(self._result_dir, 'mockconfig.log')
@@ -359,15 +351,13 @@
         # We need to make sure that mock has dumped the status file withing a certain
         # amount of time, otherwise we can't tell what it's doing
         if not os.path.exists(self._state_file):
-            # something is wrong if mock takes more than 15s to write the status file
-            if time.time() > self._mockstarttime + 15:
+            # something is wrong if mock takes more than 60s to write the status file
+            if time.time() > self._mockstarttime + 60:
                 self._mockstarttime = 0
                 self._log("ERROR: Timed out waiting for the mock status file!  %s\n" % self._state_file)
                 self.die()
         else:
-            if not self._mock_config and self._mock_is_prepping():
-                self._mock_config = self._read_mock_config()
-            if not self._mock_is_prepping():
+            if self._get_mock_status() == 'building':
                 self._status = 'building'
                 return
             self._watch_mock('done', 'failed')
