diff -Nur plague-0.4.5-orig/server/PackageJob.py plague-0.4.5/server/PackageJob.py
--- plague-0.4.5-orig/server/PackageJob.py	2008-01-31 15:30:57.000000000 +0100
+++ plague-0.4.5/server/PackageJob.py	2008-07-14 23:44:47.000000000 +0200
@@ -729,30 +729,9 @@
 
         self.bm.notify_job_done(self)
 
-    def _get_log_tail(self, arch):
-        """ Returns the last 30 lines of the most relevant log file """
-
-        pkg_dir = "%s-%s-%s-%s" % (self.uid, self.name, self.ver, self.release)
-        work_dir = self._server_cfg.get_str("Directories", "server_work_dir")
-        log_dir = os.path.join(work_dir, self._target_str, pkg_dir, arch)
-        final_log = None
-        build_log = "%s/%s" % (log_dir, "build.log")
-        root_log = "%s/%s" % (log_dir, "root.log")
-        job_log = "%s/%s" % (log_dir, "job.log")
-
-        # Try the most relevant log file first
-        if os.path.exists(build_log) and os.path.getsize(build_log) > 0:
-            final_log = build_log
-        elif os.path.exists(root_log) and os.path.getsize(root_log) > 0:
-            final_log = root_log
-        elif os.path.exists(job_log) and os.path.getsize(job_log) > 0:
-            final_log = job_log
-
-        if not final_log:
-            return ""
-
-        seek_pos = os.path.getsize(final_log) - 4096
-        f = open(final_log, "r", 4096);
+    def _get_log_file_tail(self, logfile):
+        seek_pos = os.path.getsize(logfile) - 4096
+        f = open(logfile, "r", 4096);
         if seek_pos > 0:
             f.seek(seek_pos)
         try:
@@ -770,9 +749,28 @@
             lines.append(line)
             if len(lines) > 30:  # only want last 30 lines
                 del lines[0]
-
         f.close()
-        return "".join(lines)
+        return lines
+
+    def _get_log_tail(self, arch):
+        """ Returns the last 30 lines of the most relevant log file(s) """
+
+        pkg_dir = "%s-%s-%s-%s" % (self.uid, self.name, self.ver, self.release)
+        work_dir = self._server_cfg.get_str("Directories", "server_work_dir")
+        log_dir = os.path.join(work_dir, self._target_str, pkg_dir, arch)
+
+        logtail = []
+        for l in ["build.log", "root.log", "job.log"]:
+            lpath = os.path.join(log_dir, l)
+            if os.path.exists(lpath) and os.path.getsize(lpath)>0:
+                lines = self._get_log_file_tail(lpath)
+                if l=="build.log" and len(lines)<10:
+                    logtail += lines
+                    logtail.append("\n\n"+">"*40+"\n\n")
+                else:
+                    logtail += lines
+                    break
+        return "".join(logtail)
 
     def email_result(self, to, resultstring, subject=None):
         """send 'resultstring' to self.username"""
